{
  "hash": "17c209182d7f1c667a8ca4dbc8759d19",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexecute:\n  freeze: auto\n---\n\n\n\n\n# Simulazioni {#sec-prob-simulations}\n\n**Prerequisiti**\n\n- Leggere [Regression and Other Stories](https://users.aalto.fi/~ave/ROS.pdf). Focalizzati sul capitolo 5. \n\n**Concetti e Competenze Chiave**\n\n**Preparazione del Notebook**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhere::here(\"code\", \"_common.R\") |> \n  source()\n\n# Load packages\nif (!requireNamespace(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(tidyr)\n```\n:::\n\n\n\n\n## Introduzione\n\nIn questo capitolo, discuteremo alcuni esercizi di simulazione presentati da @gelman2021regression nel quinto capitolo del loro libro. Gli autori sottolineano che simulare variabili casuali è essenziale nelle statistiche applicate per diversi motivi:\n\n- Comprensione della variazione casuale: I modelli di probabilità imitano la variabilità del mondo reale. La simulazione aiuta a sviluppare intuizioni sulle oscillazioni casuali nel breve termine e sui loro effetti nel lungo termine.\n\n- Distribuzione campionaria: Simulare dati consente di approssimare la distribuzione campionaria, trasferendo questa approssimazione alle stime e alle procedure statistiche.\n\n- Previsioni probabilistiche: I modelli di regressione producono previsioni probabilistiche. La simulazione è il metodo più generale per rappresentare l'incertezza nelle previsioni.\n\n## Esempio 1: Quante bambine su 400 nascite?\n\nSupponiamo che la probabilità di nascita di una bambina sia $p$ = 0.488. Se in un ospedale nascono 400 bambini in un anno, quante saranno bambine? Possiamo simulare questo processo usando una distribuzione binomiale, ripetendo la simulazione 10,000 volte.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Numero di simulazioni\nn_sims <- 10000\n\n# Probabilità di nascita di una bambina\np_girl <- 0.488\n\n# Simulazione del numero di bambine\nset.seed(123)\nn_girls <- rbinom(n_sims, size = 400, prob = p_girl)\n\n# Visualizzazione dell'istogramma\nggplot(data.frame(n_girls), aes(x = n_girls)) +\n  geom_histogram(binwidth = 5, fill = \"blue\", color = \"black\", alpha = 0.6) +\n  labs(\n    title = \"Distribuzione del Numero di Bambine su 400 Nascite\",\n    x = \"Numero di Bambine\",\n    y = \"Frequenza\"\n  )\n```\n\n::: {.cell-output-display}\n![](14_simulation_files/figure-html/unnamed-chunk-2-1.png){width=576}\n:::\n:::\n\n\n\n\n## Simulazione di probabilità continue\n\n@gelman2021regression dimostrano come sia possibile incorporare anche distribuzioni di probabilità continue nei tipi di simulazioni discusse nella sezione precedente. Forniscono il seguente esempio di un modello misto discreto/continuo: il 52% degli adulti negli Stati Uniti sono donne e il 48% sono uomini. L'altezza degli uomini segue approssimativamente una distribuzione normale con una media di 69.1 pollici e una deviazione standard di 2.9 pollici; per le donne, la media è 63.7 pollici e la deviazione standard è 2.7 pollici. Ecco il codice per generare l'altezza di un adulto scelto casualmente:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimulate_height <- function(N) {\n  gender <- rbinom(N, size = 1, prob = 0.48) # 1 = uomo, 0 = donna\n  height <- ifelse(\n    gender == 1,\n    rnorm(N, mean = 69.1, sd = 2.9),\n    rnorm(N, mean = 63.7, sd = 2.7)\n  )\n  return(mean(height))\n}\n```\n:::\n\n\n\n\nSupponiamo di selezionare 10 adulti a caso. Cosa possiamo dire della loro altezza media?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nn_sims <- 10000\navg_heights <- replicate(n_sims, simulate_height(10))\n\n# Visualizzazione dell'istogramma\nggplot(data.frame(avg_heights), aes(x = avg_heights)) +\n  geom_histogram(binwidth = 0.2, fill = \"blue\", color = \"black\", alpha = 0.6) +\n  labs(\n    title = \"Distribuzione dell'Altezza Media di 10 Adulti\",\n    x = \"Altezza Media\",\n    y = \"Frequenza\"\n  )\n```\n\n::: {.cell-output-display}\n![](14_simulation_files/figure-html/unnamed-chunk-4-1.png){width=576}\n:::\n:::\n\n\n\n\n## Sommario di una simulazione con media e mediana\n\nQuando le nostre distribuzioni sono costruite come simulazioni al computer, può essere conveniente riassumerle in qualche modo. Tipicamente, riassumiamo la posizione di una distribuzione con la sua media o mediana.\n\nLa variazione nella distribuzione è tipicamente riassunta dalla deviazione standard, ma spesso preferiamo usare la deviazione mediana assoluta. Se la mediana di un insieme di simulazioni $z_1, \\ldots, z_n$ è $M$, allora la deviazione mediana assoluta è:\n\n$$ \\text{mad} = \\text{mediana}_{n} |z_i - M| $$\n\nTuttavia, poiché siamo abituati a lavorare con le deviazioni standard, quando calcoliamo la deviazione mediana assoluta, la riscaliamo moltiplicandola per 1.483, il che riproduce la deviazione standard nel caso speciale della distribuzione normale:\n\n$$ 1.483 * \\text{median}(|y - \\text{median}(z)|) $$\n\nPreferiamo tipicamente i riassunti basati sulla mediana perché sono più stabili computazionalmente, e riscaliamo il riassunto basato sulla mediana della variazione come descritto sopra in modo da essere comparabile alla deviazione standard, che sappiamo già interpretare nella pratica statistica usuale.\n\nEcco come implementare quanto sopra in R per i dati relativi all'altezza media di 10 adulti.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calcolo della media e mediana\nmean_avg_height <- mean(avg_heights)\nmedian_avg_height <- median(avg_heights)\n\n# Calcolo della deviazione standard\nsd_avg_height <- sd(avg_heights)\n\n# Calcolo della MAD (Deviazione Mediana Assoluta)\nmad_avg_height <- median(abs(avg_heights - median_avg_height)) * 1.483\n\n# Risultati\ncat(\"Mean:\", mean_avg_height, \"\\n\")\n#> Mean: 66.3\ncat(\"Median:\", median_avg_height, \"\\n\")\n#> Median: 66.3\ncat(\"Standard Deviation:\", sd_avg_height, \"\\n\")\n#> Standard Deviation: 1.23\ncat(\"MAD (scaled):\", mad_avg_height, \"\\n\")\n#> MAD (scaled): 1.23\n```\n:::\n\n\n\n\n### Intervalli di Incertezza\n\nPer rappresentare l'incertezza, possiamo calcolare intervalli centrali al 50% e al 95%.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Intervalli di incertezza\nlower_50 <- quantile(avg_heights, 0.25)\nupper_50 <- quantile(avg_heights, 0.75)\n\nlower_95 <- quantile(avg_heights, 0.025)\nupper_95 <- quantile(avg_heights, 0.975)\n\ncat(\"50% Interval:\", lower_50, \"-\", upper_50, \"\\n\")\n#> 50% Interval: 65.5 - 67.1\ncat(\"95% Interval:\", lower_95, \"-\", upper_95, \"\\n\")\n#> 95% Interval: 63.9 - 68.8\n```\n:::\n\n\n\n\nEcco come interpretarli.\n\n**Intervallo centrale al 50%.**\n\n- Contiene i valori centrali che coprono il 50% della distribuzione. Questo intervallo si estende dal primo quartile (25° percentile) al terzo quartile (75° percentile).\n- Indica la fascia di valori in cui si trovano i risultati \"più comuni\" o tipici. È una misura di variabilità concentrata nella parte centrale della distribuzione, meno sensibile a valori estremi.\n  - Per le altezze medie simulate di 10 adulti, un intervallo centrale al 50% che va da 65 a 67 pollici indica che metà delle medie osservate si trova in questo intervallo.\n\n**Intervallo centrale al 95%.**\n\n- Contiene il 95% della distribuzione simulata, lasciando solo il 2.5% dei valori al di sotto e il 2.5% al di sopra dell'intervallo. Questo intervallo si calcola tra il 2.5° percentile e il 97.5° percentile.\n- Indica una fascia più ampia che cattura quasi tutti i valori plausibili, inclusi quelli meno probabili ma comunque possibili. \n  - Per le altezze medie simulate, un intervallo al 95% che va da 64 a 68 pollici significa che, in quasi tutte le simulazioni, l'altezza media si trova in questo intervallo, con poche eccezioni.\n\n## Commenti e Considerazioni Finali\n\nLo scopo della simulazione di dati fittizi non è fornire intuizioni sui dati o sul problema reale in esame, ma piuttosto valutare le proprietà dei metodi statistici utilizzati, partendo da un modello generativo ipotizzato. Le simulazioni sono cruciali nella pratica della ricerca. Molti autori suggeriscono che dovrebbero essere eseguite prima di raccogliere i dati di uno studio, per valutare, tra le altre cose, se la dimensione campionaria prevista fornisce un potere statistico sufficiente per rispondere alla domanda della ricerca [@gelman2024statistical].\n\n## Esercizi\n\n::: {#exr-prob-simulation-1}\n\nImmagina il caso di 220 studenti che devono sostenere tre prove in itinere in un corso. Il voto finale è la media dei voti ottenuti in queste tre prove. Le distribuzioni dei voti per le prove sono descritte come segue:\n\n- Prima prova: I voti sono distribuiti secondo una gaussiana con media 24. Il 15% degli studenti ottiene un voto inferiore a 18.\n- Seconda prova: I voti sono distribuiti secondo una gaussiana con media 25. Il 10% degli studenti ottiene un voto inferiore a 18.\n- Terza prova: I voti sono distribuiti secondo una gaussiana con media 26. Solo il 5% degli studenti ottiene un voto inferiore a 18.\n\nDei 220 studenti iniziali:\n\n- Il 10% non partecipa alla prima prova.\n- Un ulteriore 5% non partecipa alla seconda prova.\n\nPer ottenere il voto finale, uno studente deve partecipare a tutte e tre le prove.\n\nUtilizzando una simulazione, trova la media finale dei voti e calcola l'intervallo di incertezza al 90% per la stima della media.\n\n:::\n\n\n## Informazioni sull'Ambiente di Sviluppo {.unnumbered} \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n#> R version 4.4.2 (2024-10-31)\n#> Platform: aarch64-apple-darwin20\n#> Running under: macOS Sequoia 15.2\n#> \n#> Matrix products: default\n#> BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \n#> LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n#> \n#> locale:\n#> [1] C/UTF-8/C/C/C/C\n#> \n#> time zone: Europe/Rome\n#> tzcode source: internal\n#> \n#> attached base packages:\n#> [1] stats     graphics  grDevices utils     datasets  methods   base     \n#> \n#> other attached packages:\n#>  [1] viridis_0.6.5     viridisLite_0.4.2 gridExtra_2.3     patchwork_1.3.0  \n#>  [5] bayesplot_1.11.1  psych_2.4.6.26    scales_1.3.0      markdown_1.13    \n#>  [9] knitr_1.49        lubridate_1.9.4   forcats_1.0.0     stringr_1.5.1    \n#> [13] dplyr_1.1.4       purrr_1.0.2       readr_2.1.5       tidyr_1.3.1      \n#> [17] tibble_3.2.1      ggplot2_3.5.1     tidyverse_2.0.0   rio_1.2.3        \n#> [21] here_1.0.1       \n#> \n#> loaded via a namespace (and not attached):\n#>  [1] utf8_1.2.4        generics_0.1.3    stringi_1.8.4     lattice_0.22-6   \n#>  [5] hms_1.1.3         digest_0.6.37     magrittr_2.0.3    evaluate_1.0.1   \n#>  [9] grid_4.4.2        timechange_0.3.0  fastmap_1.2.0     rprojroot_2.0.4  \n#> [13] jsonlite_1.8.9    fansi_1.0.6       mnormt_2.1.1      cli_3.6.3        \n#> [17] rlang_1.1.4       munsell_0.5.1     withr_3.0.2       yaml_2.3.10      \n#> [21] tools_4.4.2       parallel_4.4.2    tzdb_0.4.0        colorspace_2.1-1 \n#> [25] pacman_0.5.1      vctrs_0.6.5       R6_2.5.1          lifecycle_1.0.4  \n#> [29] htmlwidgets_1.6.4 pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.6     \n#> [33] glue_1.8.0        xfun_0.49         tidyselect_1.2.1  farver_2.1.2     \n#> [37] htmltools_0.5.8.1 nlme_3.1-166      labeling_0.4.3    rmarkdown_2.29   \n#> [41] compiler_4.4.2\n```\n:::\n\n\n\n\n## Bibliografia {.unnumbered}\n",
    "supporting": [
      "14_simulation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}